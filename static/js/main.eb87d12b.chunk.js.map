{"version":3,"sources":["components/Comment.js","config.js","components/CommentList.js","components/UserPost.js","components/UserPostList.js","components/PostSender.js","components/BlogFeed.js","components/App.js","index.js"],"names":["Comment","_ref","comment","react_default","a","createElement","className","name","body","config","backend","BASE_URL","CommentList","state","isOpen","comments","handleClick","_this","setState","fetch","concat","props","postId","then","json","commentsJson","onClick","this","length","map","key","id","components_Comment","Component","UserPost","userPost","removePostGlobal","title","method","response","components_CommentList","UserPostList","userPosts","uuidV4","components_UserPost","PostSender","titleInput","postInput","handleChangeTitle","event","target","value","handleChangePost","handleAddClick","JSON","stringify","userId","headers","Content-type","addPostGlobal","render","placeholder","type","onChange","React","BlogFeed","handleChange","loadPosts","componentDidMount","addPost","newPost","postsCopy","Object","toConsumableArray","unshift","removePost","postIdToRemove","postsToKeep","filter","post","postsUrl","posts","postsJson","ref","searchInput","autoFocus","components_PostSender","components_UserPostList","App","components_BlogFeed","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.eb87d12b.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Comment({ comment }) {\n    return (\n        <div className='text-block'>\n            <h4>{comment.name}</h4>\n            <div>{comment.body}</div>\n        </div>\n    );\n}\n\nexport default Comment;","export default {\n    backend: {\n        BASE_URL: 'https://jsonplaceholder.typicode.com'\n    }\n}\n","import React, { Component } from 'react';\nimport Comment from './Comment';\nimport config from '../config'\n\nclass CommentList extends Component {\n\n    state = {\n        isOpen: false,\n        comments: []\n    }\n\n    render() {\n        return (\n            <div className=\"user-comments\">\n                <div className=\"comments\">{/* comments area */}\n                    <button\n                        className=\"button-default\"\n                        onClick={this.handleClick}>\n                        {this.state.isOpen ? 'hide comments' : 'show comments'}\n                    </button>\n                    {\n                        this.state.isOpen && this.state.comments.length > 0 && (\n                            <ul>\n                                { this.state.comments.map(comment =>\n                                    <li key={comment.id}>\n                                        <Comment comment={comment} />\n                                    </li>\n                                )}\n                            </ul>)\n                    }\n                </div>\n            </div>\n        )\n\n    }\n\n    /** Loading comments on state opening only. */\n    handleClick = () => {\n        if (!this.state.isOpen) {\n            fetch(`${config.backend.BASE_URL}/posts/${this.props.postId}/comments`)\n                .then(comments => comments.json())\n                .then(commentsJson =>\n                    this.setState({\n                        comments: commentsJson,\n                        isOpen: true\n                    }));\n        } else {\n            this.setState({\n                isOpen: false\n            });\n        }\n    }\n}\n\nexport default CommentList;","import React from 'react';\nimport CommentList from './CommentList';\nimport config from '../config';\n\nfunction UserPost({ userPost, removePostGlobal }) {\n\n    const handleRemoveClick = () => {\n        fetch(`${config.backend.BASE_URL}/posts/${userPost.id}`,\n            { method: 'DELETE' })\n            .then(response => response.json())\n            .then(json => removePostGlobal(userPost.id));\n    }\n\n    return (\n        <div className='text-block'>\n            <div>\n                <div className=\"h-flex-container\">\n                    <div className=\"title\">{userPost.title}</div>\n                    <button className=\"remove\" onClick={handleRemoveClick}>â•³</button>\n                </div>\n\n                <div className=\"section-body\">{userPost.body}</div>\n            </div>\n\n            <CommentList postId={userPost.id} />\n        </div>\n    )\n}\n\nexport default UserPost;\n","import React from 'react';\nimport UserPost from './UserPost';\nimport {v4 as uuidV4} from 'uuid';\n\nconst UserPostList = ({ \n    userPosts,\n    removePostGlobal\n}) => (\n    <ul>\n        {\n            userPosts.map(userPost =>\n                (\n                    <li key={uuidV4()}>\n                        <div className=\"block\">\n                            <UserPost\n                                userPost={userPost}\n                                removePostGlobal={removePostGlobal} />\n                        </div>\n                    </li>\n                )\n            )\n        }\n    </ul>);\n\nexport default UserPostList;","import React from 'react';\nimport config from '../config'\n\nclass PostSender extends React.Component {\n\n    state = {\n        titleInput: '',\n        postInput: ''\n    }\n\n    handleChangeTitle = event =>\n        this.setState({ titleInput: event.target.value });\n\n\n    handleChangePost = event =>\n        this.setState({ postInput: event.target.value });\n\n\n    handleAddClick = () => {\n\n        fetch(`${config.backend.BASE_URL}/posts`,\n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    title: this.state.titleInput,\n                    body: this.state.postInput,\n                    userId: this.props.userId,\n                }),\n                headers: {\n                    'Content-type': 'application/json; charset=UTF-8',\n                },\n            })\n            .then(response => response.json())\n            .then(json => {\n                this.setState({ titleInput: '', postInput: '' })\n                this.props.addPostGlobal(json);\n            });\n    }\n\n    render = () => (\n        <div className=\"post-sender\">\n\n            <input\n                className=\"input-post-sender\"\n                placeholder=\"Header\"\n                type=\"text\"\n                value={this.state.titleInput}\n                onChange={this.handleChangeTitle} />\n\n            <textarea\n                className=\"input-post-sender\"\n                placeholder=\"Write your post\"\n                type=\"text\"\n                value={this.state.postInput}\n                onChange={this.handleChangePost} />\n\n            <button\n                className=\"button-default\"\n                onClick={this.handleAddClick}\n            >\n                Post\n                </button>\n        </div>\n    );\n\n}\n\nexport default PostSender;","import React from 'react';\nimport UserPostList from './UserPostList';\nimport PostSender from './PostSender';\nimport config from '../config';\n\nclass BlogFeed extends React.Component {\n\n    state = {\n        userId: '',\n        userPosts: []\n    }\n\n    handleChange = event => {\n        this.setState({ userId: event.target.value });\n        this.loadPosts(event.target.value);\n    }\n\n    componentDidMount = () =>\n        this.loadPosts();\n\n    addPost = newPost => {\n        const postsCopy = [...this.state.userPosts];\n        postsCopy.unshift(newPost);\n        this.setState({ userPosts: postsCopy });\n    }\n\n    removePost = postIdToRemove => {\n        const postsToKeep = this.state.userPosts\n            .filter(post => post.id !== postIdToRemove)\n\n        this.setState({ userPosts: postsToKeep });\n    }\n\n    loadPosts = userId => {\n        let postsUrl;\n        if (!!userId) {\n            postsUrl = `${config.backend.BASE_URL}/users/${userId}/posts/`\n        } else {\n            postsUrl = `${config.backend.BASE_URL}/posts/`\n        }\n\n        fetch(postsUrl)\n            .then(posts => posts.json())\n            .then(postsJson =>\n                this.setState({\n                    userId: this.state.userId,\n                    userPosts: postsJson\n                }))\n    }\n\n    render = () => (\n        <div>\n            <div className=\"search\">\n                <input\n                    type=\"text\" \n                    value={this.state.userId} \n                    onChange={this.handleChange} \n                    placeholder=\"Enter user ID\"\n                    ref={this.searchInput}\n                    autoFocus={true}\n                />\n            </div>\n            {\n                !!this.state.userId &&\n                <PostSender\n                    userId={this.state.userId}\n                    addPostGlobal={this.addPost}\n                />\n            }\n            {\n                !this.state.userId &&\n                <div className=\"post-sender\">\n                    <div>Enter user ID for new post</div>\n                </div>\n            }\n            <div className=\"blog-feed\">\n                <UserPostList\n                    userPosts={this.state.userPosts}\n                    removePostGlobal={this.removePost} />\n            </div>\n        </div>\n    );\n}\n\nexport default BlogFeed;","import React from 'react';\nimport BlogFeed from './BlogFeed';\n\nfunction App() {\n  return(\n      <div>\n        <BlogFeed />\n      </div>\n  )\n};\n\nexport default App","import React from 'react';\nimport { render } from 'react-dom'\nimport './AppStyle.css';\nimport App from './components/App'\n\nrender(<App />, document.getElementById('root'))"],"sourceRoot":""}